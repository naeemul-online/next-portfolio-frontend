{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Next%20Level%20Programming/M7/A7_Client/next-portfolio-frontend/src/helpers/authOptions.ts"],"sourcesContent":["import { NextAuthOptions } from \"next-auth\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\nimport GoogleProvider from \"next-auth/providers/google\";\n\ndeclare module \"next-auth\" {\n  interface Session {\n    user: {\n      id: string;\n      name?: string | null;\n      email?: string | null;\n      role?: string | null;\n    };\n  }\n  interface User {\n    id: string;\n    name?: string | null;\n    email?: string | null;\n    role?: string | null;\n  }\n}\n\nexport const authOptions: NextAuthOptions = {\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID as string,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET as string,\n    }),\n    CredentialsProvider({\n      name: \"Credentials\",\n      credentials: {\n        email: { label: \"Email\", type: \"text\" },\n        password: { label: \"Password\", type: \"password\" },\n      },\n\n      async authorize(credentials) {\n        if (!credentials?.email || !credentials.password) {\n          console.error(\"Email or Password is missing\", credentials);\n          return null;\n        }\n\n        try {\n          const res = await fetch(\n            `${process.env.NEXT_PUBLIC_BASE_API}/auth/login`,\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              credentials: \"include\",\n              body: JSON.stringify({\n                email: credentials.email,\n                password: credentials.password,\n              }),\n            }\n          );\n          if (!res.ok) {\n            console.error(\"Login Failed\", await res.text());\n            return null;\n          }\n\n          const user = await res.json();\n\n          if (user.success) {\n            return {\n              id: user?.data?.user?.id,\n              name: user?.data?.user?.name,\n              email: user?.data?.user?.email,\n              role: user?.data?.user?.role,\n            };\n          } else {\n            return null;\n          }\n        } catch (err) {\n          console.error(err);\n          return null;\n        }\n      },\n    }),\n  ],\n  callbacks: {\n    async jwt({ token, user }) {\n      if (user) {\n        token.id = user?.id;\n        token.role = user.role;\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      if (session?.user) {\n        session.user.id = token?.id as string;\n        session.user.role = token.role as string;\n      }\n      return session;\n    },\n  },\n  // secret: process.env.AUTH_SECRET,\n  pages: {\n    signIn: \"/login\",\n  },\n};\n"],"names":[],"mappings":";;;;AACA;AACA;;;AAmBO,MAAM,cAA+B;IAC1C,WAAW;QACT,IAAA,8JAAc,EAAC;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;QACA,IAAA,mKAAmB,EAAC;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAO;gBACtC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YAEA,MAAM,WAAU,WAAW;gBACzB,IAAI,CAAC,aAAa,SAAS,CAAC,YAAY,QAAQ,EAAE;oBAChD,QAAQ,KAAK,CAAC,gCAAgC;oBAC9C,OAAO;gBACT;gBAEA,IAAI;oBACF,MAAM,MAAM,MAAM,MAChB,4FAAoC,WAAW,CAAC,EAChD;wBACE,QAAQ;wBACR,SAAS;4BACP,gBAAgB;wBAClB;wBACA,aAAa;wBACb,MAAM,KAAK,SAAS,CAAC;4BACnB,OAAO,YAAY,KAAK;4BACxB,UAAU,YAAY,QAAQ;wBAChC;oBACF;oBAEF,IAAI,CAAC,IAAI,EAAE,EAAE;wBACX,QAAQ,KAAK,CAAC,gBAAgB,MAAM,IAAI,IAAI;wBAC5C,OAAO;oBACT;oBAEA,MAAM,OAAO,MAAM,IAAI,IAAI;oBAE3B,IAAI,KAAK,OAAO,EAAE;wBAChB,OAAO;4BACL,IAAI,MAAM,MAAM,MAAM;4BACtB,MAAM,MAAM,MAAM,MAAM;4BACxB,OAAO,MAAM,MAAM,MAAM;4BACzB,MAAM,MAAM,MAAM,MAAM;wBAC1B;oBACF,OAAO;wBACL,OAAO;oBACT;gBACF,EAAE,OAAO,KAAK;oBACZ,QAAQ,KAAK,CAAC;oBACd,OAAO;gBACT;YACF;QACF;KACD;IACD,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,EAAE,GAAG,MAAM;gBACjB,MAAM,IAAI,GAAG,KAAK,IAAI;YACxB;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,SAAS,MAAM;gBACjB,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO;gBACzB,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;YAChC;YACA,OAAO;QACT;IACF;IACA,mCAAmC;IACnC,OAAO;QACL,QAAQ;IACV;AACF","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Next%20Level%20Programming/M7/A7_Client/next-portfolio-frontend/src/helpers/getUserSession.ts"],"sourcesContent":["import { getServerSession } from \"next-auth\";\nimport { authOptions } from \"./authOptions\";\nexport const getUserSession = async () => await getServerSession(authOptions);\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AACO,MAAM,iBAAiB,UAAY,MAAM,IAAA,yJAAgB,EAAC,4IAAW","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Next%20Level%20Programming/M7/A7_Client/next-portfolio-frontend/src/app/%28public%29/about/page.tsx"],"sourcesContent":["import { getUserSession } from \"@/helpers/getUserSession\";\n\nconst AboutPage = async () => {\n  const session = await getUserSession();\n  console.log(session);\n  return (\n    <div className=\"py-30 px-4 max-w-7xl mx-auto\">\n      <h1 className=\"text-4xl font-semibold text-gray-700 text-center\">\n        ðŸ’¤ The developer is sleeping now. Check back later!\n      </h1>\n    </div>\n  );\n};\n\nexport default AboutPage;\n"],"names":[],"mappings":";;;;;AAAA;;;AAEA,MAAM,YAAY;IAChB,MAAM,UAAU,MAAM,IAAA,kJAAc;IACpC,QAAQ,GAAG,CAAC;IACZ,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAG,WAAU;sBAAmD;;;;;;;;;;;AAKvE;uCAEe","debugId":null}}]
}